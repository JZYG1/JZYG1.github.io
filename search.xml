<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>个人图床搭建</title>
      <link href="/archives/55f1.html"/>
      <url>/archives/55f1.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="使用picgo-typora-github搭建个人图床"><a href="#使用picgo-typora-github搭建个人图床" class="headerlink" title="使用picgo+typora+github搭建个人图床"></a>使用picgo+typora+github搭建个人图床</h1><ol><li>picgo下载链接：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></li><li>在github创建一个仓库用来存储图床，生成token</li></ol><p><img src="https://cdn.jsdelivr.net/gh/JZYG1/picture/img/image-20241204171438744.png" alt="image-20241204171438744"></p><p><img src="https://cdn.jsdelivr.net/gh/JZYG1/picture/img/image-20241204171555434.png" alt="image-20241204171555434"></p><p><img src="https://cdn.jsdelivr.net/gh/JZYG1/picture/img/image-20241204171701931.png" alt="image-20241204171701931"></p><p><img src="https://cdn.jsdelivr.net/gh/JZYG1/picture/img/image-20241204171806139.png" alt="image-20241204171806139"></p><p>按照上述操作，只需要创建token，将生成token的内容复制到picgo中的token位置即可</p><ol start="3"><li>在picgo中配置github的信息，其中自定义域名需要设置为<a href="https://cdn.jsdelivr.net/gh/%E5%90%8E%E9%9D%A2%E6%98%AF%E8%AE%BE%E5%AE%9A%E7%9A%84%E4%BB%93%E5%BA%93%E5%90%8D">https://cdn.jsdelivr.net/gh/后面是设定的仓库名</a></li></ol><p><img src="https://cdn.jsdelivr.net/gh/JZYG1/picture/img/image-20241204170953402.png"></p><ol start="4"><li>以后复制的图片加入typora中点击图片上传后，图片的链接从本地的转换为自定义的网络图片</li></ol><h1 id="使用picgo-typora-MinIo搭建个人图床"><a href="#使用picgo-typora-MinIo搭建个人图床" class="headerlink" title="使用picgo+typora+MinIo搭建个人图床"></a>使用picgo+typora+MinIo搭建个人图床</h1><p>建立在有服务器的基础上</p><h2 id="MinIO的部署"><a href="#MinIO的部署" class="headerlink" title="MinIO的部署"></a>MinIO的部署</h2><ol><li>下载MinIO</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://dl.min.io/server/minio/release/windows-amd64/minio.exe</span><br></pre></td></tr></table></figure><ol start="2"><li>将文件minio.exe移动到D:&#x2F;minio，cmd打开控制台，输入</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minio.exe server d:/minio/data</span><br></pre></td></tr></table></figure><ol start="3"><li>登录minio的管理平台，创建bucker、生成accessKey和secretKey</li></ol><p><img src="https://cdn.jsdelivr.net/gh/JZYG1/picture/img/image-20241204224520669.png" alt="image-20241204224520669"></p><ol start="4"><li>在PicGo中配置本地导入minio插件，在线是下载不了</li></ol><ul><li>下载picgo-plugin-minio文件，下载链接：<a href="https://github.com/Herbertzz/picgo-plugin-minio">Herbertzz&#x2F;picgo-plugin-minio</a>，将文件压缩在D:&#x2F;minio</li></ul><p><img src="https://cdn.jsdelivr.net/gh/JZYG1/picture/img/image-20241204225442607.png" alt="image-20241204225442607"></p><ul><li>在D:&#x2F;minio中使用控制台输入：<code>npm install</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/JZYG1/picture/img/image-20241204225313205.png" alt="image-20241204225313205"></p><ol start="5"><li>从PicGo中本地导入MinIO，路径就是D:&#x2F;minio&#x2F;picgo-plugin-minio-master</li></ol><p><img src="https://cdn.jsdelivr.net/gh/JZYG1/picture/img/image-20241204225737756.png" alt="image-20241204225737756"></p><ol start="6"><li>配置PicGo中的MinIO信息，这个只是本地部署，为线上部署准备</li></ol><p><img src="https://cdn.jsdelivr.net/gh/JZYG1/picture/img/image-20241204230038344.png" alt="image-20241204230038344"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客备份</title>
      <link href="/archives/8579.html"/>
      <url>/archives/8579.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="基于github个人博客备份"><a href="#基于github个人博客备份" class="headerlink" title="基于github个人博客备份"></a>基于github个人博客备份</h1><h2 id="1-本地上传到github"><a href="#1-本地上传到github" class="headerlink" title="1. 本地上传到github"></a>1. 本地上传到github</h2><p>先在github上创建一个仓库，用于备份个人博客</p><p>在自己的博客目录下一条一条执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>这里需要自己设定一个名字，比如说：’’初始化个人博客’’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;初始化个人博客&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -M main</span><br></pre></td></tr></table></figure><p>在 Git 中，<code>origin</code> 是一个默认的远程仓库名称，通常用于指向你的代码托管服务（比如 GitHub、GitLab 等）上的主仓库。如果你已经有一个名为 <code>origin</code> 的远程仓库，并且你想使用不同的 URL 更新它，你应该使用 <code>git remote set-url</code> 命令而不是 <code>git remote add</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">方法一：如果你第一次执行下述代码，不会报错，如果报错，执行方法二</span><br><span class="line">git remote add origin https://github.com/JZYG1/blog.git</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">方法二：如果你以前初始化过origin的话，执行下述</span><br><span class="line">git remote set-url origin https://github.com/JZYG1/blog.git</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><h2 id="2-github下载到本地"><a href="#2-github下载到本地" class="headerlink" title="2. github下载到本地"></a>2. github下载到本地</h2><p>在自定义的文件夹下执行下述命令即可，其中<code>git clone 网址</code>，网址：</p><p><img src="https://cdn.jsdelivr.net/gh/JZYG1/picture/img/image-20241204203407390.png" alt="image-20241204182238079"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/JZYG1/blog.git</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建</title>
      <link href="/archives/5f53.html"/>
      <url>/archives/5f53.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="基于hexo-github"><a href="#基于hexo-github" class="headerlink" title="基于hexo+github"></a>基于hexo+github</h1><p>必备配置</p><ol><li>node.js的安装和环境变量的配置</li><li>git安装，不需要配置环境变量</li><li>github用户注册</li><li>本地部署</li><li>上线github</li></ol><h2 id="node-js的安装和环境变量的配置"><a href="#node-js的安装和环境变量的配置" class="headerlink" title="node.js的安装和环境变量的配置"></a>node.js的安装和环境变量的配置</h2><ul><li>node.js的安装和环境变量的配置：<a href="https://blog.csdn.net/WHF__/article/details/129362462">https://blog.csdn.net/WHF__/article/details/129362462</a></li></ul><h2 id="git的安装"><a href="#git的安装" class="headerlink" title="git的安装"></a>git的安装</h2><ul><li>git的下载地址：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></li></ul><p><img src="/../img_blog/a.png" alt="image-20241203182250437"></p><p><img src="/../img_blog/b.png" alt="379a5069be0493b16e3915ada09dfc7"></p><h2 id="注册github账号"><a href="#注册github账号" class="headerlink" title="注册github账号"></a>注册github账号</h2><ol><li>注册好之后点击</li></ol><p><img src="/../img_blog/c.png" alt="c"></p><p><img src="/../img_blog/d.png" alt="ad70b47c3d9e3e941b1be98e33e7310"></p><p><img src="/../img_blog/e.png" alt="c"></p><ol start="2"><li>这是我已经创建过的仓库，就出现红色提示，不用管，按照名字.github.io创建</li></ol><p><img src="/../img_blog/f.png" alt="9a982e488dbacd59dd6f06c36e80ec1"></p><h2 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h2><ol><li>如果你的node.js是装在D盘或者E盘的Program Files文件中，那可要注意了，首先需要管理员身份打开终端，下载hexo</li></ol><p><img src="/../img_blog/g.png" alt="image-20241203212132408"></p><p>执行<code>npm install hexo-cli -g</code></p><p><img src="/../img_blog/i.png" alt="image-20241203212951629"></p><ol start="2"><li>创建文件夹用来放个人博客的文件：css、html等等文件，现在我创建一个文件夹在D:&#x2F;BlogFIle</li></ol><p><img src="/../img_blog/h.png" alt="image-20241203212557221"></p><ol start="3"><li><p>让控制台文件目录切换到D:&#x2F;BlogFIle，在控制台执行<code>cd /d d:/BlogFile</code></p></li><li><p>控制台执行：<code>hexo init myblog</code>表示初始化hexo在myblog文件夹中，我劝大家还是把myblog带上，我当时不带出问题了，随你们</p></li><li><p>控制台执行：<code>cd ./myblog</code> </p></li><li><p>控制台执行：<code>npm install</code> </p></li><li><p>修改_config.yml文件</p></li></ol><p><img src="/../img_blog/j.png"></p><ul><li><p>ctrl+f查找deloy，修改配置</p></li><li><p><img src="/../img_blog/k.png" alt="image-20241203215134935"></p></li><li><p>ctrl+f查找</p></li><li><p><img src="/../img_blog/l.png" alt="26514704dde09721304cc1f8d7ba7ff"></p></li></ul><ol start="6"><li><p>控制台执行：<code>hexo g</code>构建hexo</p></li><li><p>控制台执行：<code>hexo s</code> 本地部署，会出现默认的端口<a href="https://localhost:4000，可以查看本地部署是否成功">https://localhost:4000，可以查看本地部署是否成功</a></p></li><li><p>控制台执行：ctrl+c退出本地部署</p></li><li><p>如果本地部署成功，执行<code>hexo d</code>上传到github，就可以网上看了</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/archives/3eeb.html"/>
      <url>/archives/3eeb.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
